git remote -v
현재 연결된 웹 리포지토리 확인

git pull
git add .
git commit -m "clean push"
git push
기존 리포지토리 깔끔하게 pull/push

git remote remove origin
기존 리모트 리포지토리 제거

git remote add origin https:~~
새 리모트 리포지토리 추가

git clone 주소
해당 리포지토리 내 모든 파일을 복사

git fetch 
병합 

git init
.git 폴더 만들어서 해당 폴더를 리포지토리로 만듦

rm -rf .git
.git 폴더를 지운다
rm -r -> recursive
rm -f -> force

서브모듈(저장소 안에 저장소)

git reset
스테이징 초기화

vscode 폴더 선택 후 
git graph
해당 폴더(.git이 있는) commit 볼 수 있음

git checkout
예전 파일 상태로 만들기
git checkout master
가장 최신 상태로 파일 만들기

git branch -m master main
마스터를 메인으로 바꾸기

git ignore generator
사이트 검색 후 파일 만들고 텍스트 나오면
폴더 밑에 .gitignore 파일 만들고 복붙

git branch
브랜치 나열
git branch 브랜치이름
브랜치이름의 브랜치 생성
git checkout 브랜치이름
브랜치이름으로 활성 브랜치 변경
git switch 브랜치이름
상동

##### 자기소개 위해 잘라붙여넣기
## 2022-09-13
### RPA 1기, 웹프로그래밍 기획과 기본
#### 리눅스 커맨드라인 기초
- `pwd`: print woring directory의 약자로 현재 작업경로를 출력해주는 명령어
- `cd`: change directory의 약자로 현재 작업경로를 변경할 때 쓰는 명령어
  - 절대 경로는 /로 시작함
  - 상위 경로는 ..으로 나타냄
  - tab을 사용하면 경로 자동 완성이 됨
- `ls`: list의 약자로 현재 작업경로에 있는 파일이나 디렉토리를 출력해주는 명령어
  -ls -a, ls, -l, ls, -al과 같은 옵션을 붙일 수 있음
- `history`: 과거에 쳤던 명령어 리스트를 보여줌
  - 123번째 명령어를 복구하고 싶으면 '123'입력

#### vim 사용법
- 명령모드와 입력모드
 - vim에디터를 열 때는 명령 모드로 진입함
 - 명령 모드에서는 입력이 불가능함
 - 입력을 하려면 입력모드로 바꿔야 함
  - 키보드에서 `i` 누름
 - 입력이 끝나고, 저장하고 나오려면 명령 모드로 바꿔야함
  - 키보드에서 `ESC` 누름
 - 입력 가능한 명령어
  - `:w`
  - `:q`
  - `:wq` : 저장하고 나오기
 - 참고자료: [링크](https://zeddios.tistory.com/122)
- 비정상적으로 종료시 해결 방법
 - vim이 비정상 종료 되었을 때 `swp` 파일이 생성됨
  - ATTENTION 문구가 뜨는 경우
   1. 두 프로세스, 두 사람이 동시에 한 파일을 수정하는 경우
   2. crash가 나서 vim이 비정상적으로 닫힌 경우
 - 기존에 입력했던 내용을 복구하고 싶을 때는 `vim -r 파일명`을 입력하거나 Recovery모드로 진입
 - 정상 종료 후, swp 파일 삭제
  - `rm .789.txt.swp` <-- `rm` 명령어는 remove 약자

#### 마크다운 문법
 - 외부 링크 추가

```
사용문법: [Title](link)
적용예: [Google](https://google.com, "google link")
```
Link: [Google](https://google.com, "google link")


#### 버전 관리 시스템 git

#### 버전 관리 시스템을 사용하는 이유
1. 실행 취소, 제 실행기 가능함
2. 버전간 소스코드 비교가 가능함
3. 협업이 쉬워짐

#### 다양한 버전관리 방법
이름 변경하기 등의 방법이 있는데, 개발할 때는 git을 주로 사용함

#### 커밋
 - 커밋은 논리적 변경이 있을 때 만듦
 - 가능하면 커밋 크기가 작을수록 좋음

##### 리포지토리
 - 정의 : 여러 파일을 하나로 모든 컬렉션
 - 일반 : 디렉터리와 리포지톨의 차이: git 폴더


 ### 저자소 상태 확인하기
 ```
 git status
 ```


 #### 브랜치 
 -정의 : a branch in git is simply a lightweight movable pointer to one of these commits.
 -브랜치는 특정한 목표를 가지고 코드를 수정할 때 주로 만듦
  - 이슈 하나당 브랜치 하나를 주로 만듦

  #### 브래

  #### 명령어
  1. 브랜치 목록 보기
  ```
  git branch
  ```
  2. 브랜치 생성 하기
  ```
  git branch 브랜치명
  ```
  3. 특정 브랜치로 전환하기
   ```
   git checkout 브랜치명
   ```

   2022-09-27
   ## 브랜치 병합
   -명령어
   ```
   git merge 브랜치명
   ```



1011